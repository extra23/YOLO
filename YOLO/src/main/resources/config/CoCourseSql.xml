<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="yolo.dao.InterfaceCoCourseMapper">

	<insert id="insertCoCourse" parameterType="CoCourseAndCourse">
		insert into costudy_course(courseId, userId) values(#{courseId}, #{userId})
		<selectKey keyProperty="costudy_courseId" resultType="Integer">
			select last_insert_id()
		</selectKey>
	</insert>

	<select id="selectJoinCourse" parameterType="Integer" resultType="CoCourseAndCourse">
		select cc.costudy_courseId, cc.courseId, cc.userId, c.cTitle from costudy_course cc join course c on cc.courseId=c.courseId where cc.userId=#{userId}
	</select>
	
	<select id="selectCoCourseByCourseIdAndUserId" parameterType="CoCourseAndCourse" resultType="CoCourseAndCourse">
		select * from costudy_course where courseId=#{courseId} and userId=#{userId}
	</select>
	
	<delete id="deleteCoCourse" parameterType="Integer">
		delete from costudy_course where costudy_courseId=#{costudy_courseId}
	</delete>
	
		
	<select id="coCourseList" parameterType="Integer" resultType="CoCourseList">
	
		select u.userId as writer, u.nickname, m.mTitle, c.cTitle, c.udate,m.moduleId, cc.* from como cm 
		right outer join costudy_course cc on cm.courseId = cc.courseId
        left outer join module m on m.moduleId = cm.moduleId
        join course c on cc.courseId = c.courseId
        join user u on u.userId = c.userId where cc.userId=#{userId} group by c.cTitle order by c.udate DESC;
	</select>

</mapper>